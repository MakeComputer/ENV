#-----------------------------------------------------------
# Vivado v2017.1 (64-bit)
# SW Build 1846317 on Fri Apr 14 18:55:03 MDT 2017
# IP Build 1846188 on Fri Apr 14 20:52:08 MDT 2017
# Start of session at: Mon Dec  4 10:01:15 2017
# Process ID: 9636
# Current directory: E:/GitHub/TestVGA/Computer
# Command line: vivado.exe -gui_launcher_event rodinguilauncherevent9540 E:\GitHub\TestVGA\Computer\Computer.xpr
# Log file: E:/GitHub/TestVGA/Computer/vivado.log
# Journal file: E:/GitHub/TestVGA/Computer\vivado.jou
#-----------------------------------------------------------
start_gui
open_project E:/GitHub/TestVGA/Computer/Computer.xpr
reset_run synth_1
launch_runs impl_1 -to_step write_bitstream -jobs 2
wait_on_run impl_1
set_property -dict [list CONFIG.Load_Init_File {true} CONFIG.Coe_File {E:/GitHub/TestVGA/Computer/char_mem.coe}] [get_ips char_mem]
generate_target all [get_files  E:/GitHub/TestVGA/Computer/Computer.srcs/sources_1/ip/char_mem/char_mem.xci]
catch { config_ip_cache -export [get_ips -all char_mem] }
export_ip_user_files -of_objects [get_files E:/GitHub/TestVGA/Computer/Computer.srcs/sources_1/ip/char_mem/char_mem.xci] -no_script -sync -force -quiet
reset_run char_mem_synth_1
launch_runs -jobs 2 char_mem_synth_1
export_simulation -of_objects [get_files E:/GitHub/TestVGA/Computer/Computer.srcs/sources_1/ip/char_mem/char_mem.xci] -directory E:/GitHub/TestVGA/Computer/Computer.ip_user_files/sim_scripts -ip_user_files_dir E:/GitHub/TestVGA/Computer/Computer.ip_user_files -ipstatic_source_dir E:/GitHub/TestVGA/Computer/Computer.ip_user_files/ipstatic -lib_map_path [list {modelsim=E:/GitHub/TestVGA/Computer/Computer.cache/compile_simlib/modelsim} {questa=E:/GitHub/TestVGA/Computer/Computer.cache/compile_simlib/questa} {riviera=E:/GitHub/TestVGA/Computer/Computer.cache/compile_simlib/riviera} {activehdl=E:/GitHub/TestVGA/Computer/Computer.cache/compile_simlib/activehdl}] -use_ip_compiled_libs -force -quiet
set_property -dict [list CONFIG.Load_Init_File {true} CONFIG.Coe_File {E:/GitHub/TestVGA/Computer/fifo_mem.coe}] [get_ips fifo_mem]
generate_target all [get_files  E:/GitHub/TestVGA/Computer/Computer.srcs/sources_1/ip/fifo_mem/fifo_mem.xci]
catch { config_ip_cache -export [get_ips -all fifo_mem] }
export_ip_user_files -of_objects [get_files E:/GitHub/TestVGA/Computer/Computer.srcs/sources_1/ip/fifo_mem/fifo_mem.xci] -no_script -sync -force -quiet
reset_run fifo_mem_synth_1
launch_runs -jobs 2 fifo_mem_synth_1
export_simulation -of_objects [get_files E:/GitHub/TestVGA/Computer/Computer.srcs/sources_1/ip/fifo_mem/fifo_mem.xci] -directory E:/GitHub/TestVGA/Computer/Computer.ip_user_files/sim_scripts -ip_user_files_dir E:/GitHub/TestVGA/Computer/Computer.ip_user_files -ipstatic_source_dir E:/GitHub/TestVGA/Computer/Computer.ip_user_files/ipstatic -lib_map_path [list {modelsim=E:/GitHub/TestVGA/Computer/Computer.cache/compile_simlib/modelsim} {questa=E:/GitHub/TestVGA/Computer/Computer.cache/compile_simlib/questa} {riviera=E:/GitHub/TestVGA/Computer/Computer.cache/compile_simlib/riviera} {activehdl=E:/GitHub/TestVGA/Computer/Computer.cache/compile_simlib/activehdl}] -use_ip_compiled_libs -force -quiet
reset_run synth_1
launch_runs impl_1 -to_step write_bitstream -jobs 2
wait_on_run impl_1
set_property -dict [list CONFIG.Coe_File {E:/GitHub/TestVGA/Computer/char_mem.coe}] [get_ips char_mem]
generate_target all [get_files  E:/GitHub/TestVGA/Computer/Computer.srcs/sources_1/ip/char_mem/char_mem.xci]
catch { config_ip_cache -export [get_ips -all char_mem] }
export_ip_user_files -of_objects [get_files E:/GitHub/TestVGA/Computer/Computer.srcs/sources_1/ip/char_mem/char_mem.xci] -no_script -sync -force -quiet
reset_run char_mem_synth_1
launch_runs -jobs 2 char_mem_synth_1
export_simulation -of_objects [get_files E:/GitHub/TestVGA/Computer/Computer.srcs/sources_1/ip/char_mem/char_mem.xci] -directory E:/GitHub/TestVGA/Computer/Computer.ip_user_files/sim_scripts -ip_user_files_dir E:/GitHub/TestVGA/Computer/Computer.ip_user_files -ipstatic_source_dir E:/GitHub/TestVGA/Computer/Computer.ip_user_files/ipstatic -lib_map_path [list {modelsim=E:/GitHub/TestVGA/Computer/Computer.cache/compile_simlib/modelsim} {questa=E:/GitHub/TestVGA/Computer/Computer.cache/compile_simlib/questa} {riviera=E:/GitHub/TestVGA/Computer/Computer.cache/compile_simlib/riviera} {activehdl=E:/GitHub/TestVGA/Computer/Computer.cache/compile_simlib/activehdl}] -use_ip_compiled_libs -force -quiet
set_property -dict [list CONFIG.Coe_File {E:/GitHub/TestVGA/Computer/fifo_mem.coe}] [get_ips fifo_mem]
generate_target all [get_files  E:/GitHub/TestVGA/Computer/Computer.srcs/sources_1/ip/fifo_mem/fifo_mem.xci]
catch { config_ip_cache -export [get_ips -all fifo_mem] }
export_ip_user_files -of_objects [get_files E:/GitHub/TestVGA/Computer/Computer.srcs/sources_1/ip/fifo_mem/fifo_mem.xci] -no_script -sync -force -quiet
reset_run fifo_mem_synth_1
launch_runs -jobs 2 fifo_mem_synth_1
export_simulation -of_objects [get_files E:/GitHub/TestVGA/Computer/Computer.srcs/sources_1/ip/fifo_mem/fifo_mem.xci] -directory E:/GitHub/TestVGA/Computer/Computer.ip_user_files/sim_scripts -ip_user_files_dir E:/GitHub/TestVGA/Computer/Computer.ip_user_files -ipstatic_source_dir E:/GitHub/TestVGA/Computer/Computer.ip_user_files/ipstatic -lib_map_path [list {modelsim=E:/GitHub/TestVGA/Computer/Computer.cache/compile_simlib/modelsim} {questa=E:/GitHub/TestVGA/Computer/Computer.cache/compile_simlib/questa} {riviera=E:/GitHub/TestVGA/Computer/Computer.cache/compile_simlib/riviera} {activehdl=E:/GitHub/TestVGA/Computer/Computer.cache/compile_simlib/activehdl}] -use_ip_compiled_libs -force -quiet
reset_run synth_1
reset_run char_mem_synth_1
reset_run fifo_mem_synth_1
launch_runs impl_1 -to_step write_bitstream -jobs 2
wait_on_run impl_1
set_property -dict [list CONFIG.Coe_File {E:/GitHub/TestVGA/Computer/char_mem.coe}] [get_ips char_mem]
generate_target all [get_files  E:/GitHub/TestVGA/Computer/Computer.srcs/sources_1/ip/char_mem/char_mem.xci]
catch { config_ip_cache -export [get_ips -all char_mem] }
export_ip_user_files -of_objects [get_files E:/GitHub/TestVGA/Computer/Computer.srcs/sources_1/ip/char_mem/char_mem.xci] -no_script -sync -force -quiet
reset_run char_mem_synth_1
launch_runs -jobs 2 char_mem_synth_1
export_simulation -of_objects [get_files E:/GitHub/TestVGA/Computer/Computer.srcs/sources_1/ip/char_mem/char_mem.xci] -directory E:/GitHub/TestVGA/Computer/Computer.ip_user_files/sim_scripts -ip_user_files_dir E:/GitHub/TestVGA/Computer/Computer.ip_user_files -ipstatic_source_dir E:/GitHub/TestVGA/Computer/Computer.ip_user_files/ipstatic -lib_map_path [list {modelsim=E:/GitHub/TestVGA/Computer/Computer.cache/compile_simlib/modelsim} {questa=E:/GitHub/TestVGA/Computer/Computer.cache/compile_simlib/questa} {riviera=E:/GitHub/TestVGA/Computer/Computer.cache/compile_simlib/riviera} {activehdl=E:/GitHub/TestVGA/Computer/Computer.cache/compile_simlib/activehdl}] -use_ip_compiled_libs -force -quiet
set_property -dict [list CONFIG.Coe_File {E:/GitHub/TestVGA/Computer/fifo_mem.coe}] [get_ips fifo_mem]
generate_target all [get_files  E:/GitHub/TestVGA/Computer/Computer.srcs/sources_1/ip/fifo_mem/fifo_mem.xci]
catch { config_ip_cache -export [get_ips -all fifo_mem] }
export_ip_user_files -of_objects [get_files E:/GitHub/TestVGA/Computer/Computer.srcs/sources_1/ip/fifo_mem/fifo_mem.xci] -no_script -sync -force -quiet
reset_run fifo_mem_synth_1
launch_runs -jobs 2 fifo_mem_synth_1
export_simulation -of_objects [get_files E:/GitHub/TestVGA/Computer/Computer.srcs/sources_1/ip/fifo_mem/fifo_mem.xci] -directory E:/GitHub/TestVGA/Computer/Computer.ip_user_files/sim_scripts -ip_user_files_dir E:/GitHub/TestVGA/Computer/Computer.ip_user_files -ipstatic_source_dir E:/GitHub/TestVGA/Computer/Computer.ip_user_files/ipstatic -lib_map_path [list {modelsim=E:/GitHub/TestVGA/Computer/Computer.cache/compile_simlib/modelsim} {questa=E:/GitHub/TestVGA/Computer/Computer.cache/compile_simlib/questa} {riviera=E:/GitHub/TestVGA/Computer/Computer.cache/compile_simlib/riviera} {activehdl=E:/GitHub/TestVGA/Computer/Computer.cache/compile_simlib/activehdl}] -use_ip_compiled_libs -force -quiet
reset_run synth_1
launch_runs impl_1 -to_step write_bitstream -jobs 2
wait_on_run impl_1
close [ open E:/GitHub/TestVGA/Computer/Computer.srcs/sources_1/new/VGA_Controller.vhd w ]
add_files E:/GitHub/TestVGA/Computer/Computer.srcs/sources_1/new/VGA_Controller.vhd
create_ip -name blk_mem_gen -vendor xilinx.com -library ip -version 8.3 -module_name fontRom -dir e:/GitHub/TestVGA/Computer/Computer.srcs/sources_1/ip
set_property -dict [list CONFIG.Memory_Type {Single_Port_ROM} CONFIG.Write_Width_A {8} CONFIG.Write_Depth_A {2048} CONFIG.Enable_A {Always_Enabled} CONFIG.Register_PortA_Output_of_Memory_Primitives {true} CONFIG.Register_PortA_Output_of_Memory_Core {true} CONFIG.Load_Init_File {true} CONFIG.Coe_File {E:/GitHub/project_fz/fontRom.coe} CONFIG.Read_Width_A {8} CONFIG.Operating_Mode_A {WRITE_FIRST} CONFIG.Write_Width_B {8} CONFIG.Read_Width_B {8} CONFIG.Enable_B {Always_Enabled} CONFIG.Register_PortB_Output_of_Memory_Primitives {false} CONFIG.Port_A_Write_Rate {0} CONFIG.Port_B_Clock {0} CONFIG.Port_B_Enable_Rate {0}] [get_ips fontRom]
generate_target {instantiation_template} [get_files e:/GitHub/TestVGA/Computer/Computer.srcs/sources_1/ip/fontRom/fontRom.xci]
generate_target all [get_files  e:/GitHub/TestVGA/Computer/Computer.srcs/sources_1/ip/fontRom/fontRom.xci]
catch { config_ip_cache -export [get_ips -all fontRom] }
export_ip_user_files -of_objects [get_files e:/GitHub/TestVGA/Computer/Computer.srcs/sources_1/ip/fontRom/fontRom.xci] -no_script -sync -force -quiet
create_ip_run [get_files -of_objects [get_fileset sources_1] e:/GitHub/TestVGA/Computer/Computer.srcs/sources_1/ip/fontRom/fontRom.xci]
launch_runs -jobs 2 fontRom_synth_1
export_simulation -of_objects [get_files e:/GitHub/TestVGA/Computer/Computer.srcs/sources_1/ip/fontRom/fontRom.xci] -directory E:/GitHub/TestVGA/Computer/Computer.ip_user_files/sim_scripts -ip_user_files_dir E:/GitHub/TestVGA/Computer/Computer.ip_user_files -ipstatic_source_dir E:/GitHub/TestVGA/Computer/Computer.ip_user_files/ipstatic -lib_map_path [list {modelsim=E:/GitHub/TestVGA/Computer/Computer.cache/compile_simlib/modelsim} {questa=E:/GitHub/TestVGA/Computer/Computer.cache/compile_simlib/questa} {riviera=E:/GitHub/TestVGA/Computer/Computer.cache/compile_simlib/riviera} {activehdl=E:/GitHub/TestVGA/Computer/Computer.cache/compile_simlib/activehdl}] -use_ip_compiled_libs -force -quiet
reset_run synth_1
launch_runs impl_1 -to_step write_bitstream -jobs 2
wait_on_run impl_1
reset_run synth_1
launch_runs impl_1 -to_step write_bitstream -jobs 2
wait_on_run impl_1
reset_run impl_1 -prev_step 
launch_runs impl_1 -to_step write_bitstream -jobs 2
wait_on_run impl_1
reset_run synth_1
launch_runs impl_1 -to_step write_bitstream -jobs 2
wait_on_run impl_1
reset_run synth_1
launch_runs impl_1 -to_step write_bitstream -jobs 2
wait_on_run impl_1
reset_run impl_1 -prev_step 
launch_runs impl_1 -to_step write_bitstream -jobs 2
wait_on_run impl_1
reset_run synth_1
launch_runs impl_1 -to_step write_bitstream -jobs 2
wait_on_run impl_1
reset_run synth_1
launch_runs impl_1 -to_step write_bitstream -jobs 2
wait_on_run impl_1
reset_run synth_1
launch_runs impl_1 -to_step write_bitstream -jobs 2
wait_on_run impl_1
reset_run synth_1
launch_runs impl_1 -to_step write_bitstream -jobs 2
wait_on_run impl_1
reset_run synth_1
launch_runs impl_1 -to_step write_bitstream -jobs 2
wait_on_run impl_1
reset_run synth_1
launch_runs impl_1 -to_step write_bitstream -jobs 2
wait_on_run impl_1
reset_run synth_1
launch_runs impl_1 -to_step write_bitstream -jobs 2
wait_on_run impl_1
reset_run synth_1
launch_runs impl_1 -to_step write_bitstream -jobs 2
wait_on_run impl_1
reset_run synth_1
launch_runs impl_1 -to_step write_bitstream -jobs 2
wait_on_run impl_1
reset_run synth_1
launch_runs impl_1 -to_step write_bitstream -jobs 2
wait_on_run impl_1
reset_run synth_1
launch_runs impl_1 -to_step write_bitstream -jobs 2
wait_on_run impl_1
reset_run synth_1
launch_runs impl_1 -to_step write_bitstream -jobs 2
wait_on_run impl_1
reset_run impl_1 -prev_step 
launch_runs impl_1 -to_step write_bitstream -jobs 2
wait_on_run impl_1
reset_run impl_1 -prev_step 
reset_run synth_1
launch_runs impl_1 -to_step write_bitstream -jobs 2
wait_on_run impl_1
reset_run synth_1
launch_runs impl_1 -to_step write_bitstream -jobs 2
wait_on_run impl_1
